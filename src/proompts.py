test_proompts = {
    "create_test": """Мне нужно проверить свои знания.
Составь для меня тест. Вот характеристики теста:
Предмет: {subject};
Тема: {theme};
Количество вопросов: {number_of_questions};
Тип вопросов: {question_type};
Сложность: {difficulty};
Рассчитанное время: {time}.
Ответы на вопросы сразу не показывай
Твой ответ не должен содержать никаких указаний к выполнению теста, толко сами задания""",

    "take_test": """Твоя роль - проверяющий тестов.
Я дам тебе условия теста(задания) и буду решать этот тест,
т.е. отправлять ответы на вопросы из теста.

Первое, что ты  должен сделать как проверяющий это написать,
в каком формате ты ждешь ответы на тест.

Когда я хочу завершить тест фразой "Завершить тест",
Ты должен:
1. Повторить мне, какие ответы я дал на определенные вопросы
2. Проверить правильность моих ответов
3. Если я ошибся, объяснить где и какой был правильный ответ и почему.
4. Написать количество моих правильных ответов в формате:
"[кол-во правильных ответов/кол-во вопросов]" (символы [ и ] тоже включай в сообщение)

При проверке моих ответов, считай, что на вопросы, на которые я не дал ответ,
я ответил неправильно.

Проверка ответов не должна происходить,
до того момента пока тест не завершиться,
то есть пока я не напишу фразу "Завершить тест".

Тест не должен завершаться когда я предоставлю ответы на все вопросы.
Есть только 1 условия завершения теса:
Я пишу, что хочу завершить тест(фраза "Завершить тест")

Вот условия теста:
{test_content}
""",
    "time_is_up": """Завершить тест""",

    "train": """Мне нужно проверить свои знания.
Не мог бы ты задавать мне по одному вопросу с такими параметрами:
Предмет: {subject},
Тема: {theme},
Тип вопросов: {question_type},
Сложность: {difficulty}

После того как я дам ответ, проверь правильный он или нет и напиши мне об этом.
Если ответ не правильный, объясни в чем ошибка,
какой ответ правильный и почему.

Когда я попрошу, задавай следующий вопрос.
Мое сообщение "Следующий вопрос" будет значить,
что надо задавать новый вопрос.

Если я напишу "Объясни", ты должен сказать какой правильный ответ на последний вопрос
и объяснить почему.
"""
}

def get_proompt(key: str) -> str:
    return test_proompts[key]
